/*
问题描述：学校举办乒乓球比赛，设有n（偶数）位选手参加，初赛进行n-1天
		  每位选手都要与其他每一位选手进行一场比赛
		  要求每位选手每天必须比赛一场 

问题分析：假设4位选手参加					假设只有2位选手参加 

		  编号  第一天	第二天	第三天 		编号  第一天			编号  第一天
		  1		2		3		4			1		2				3		4
		  2		1		4		3			2		1				4		3
		  3		4		1		2
		  4 	3		2		1
		  
		  可以看到如果是第一天的比赛可以将分组的求解直接拼接起来
		  而对于第二天第三天的安排，则直接将左下角的安排复制到右上 
			 
*/ 

#include <stdio.h>
#define MAX 64  //定义了最多参赛选手的人数
int a[MAX+1][MAX+1]={0}; //多出一行一列来表示编号和天数

void gen(int k,int n)		//k表示的是选手起始编号，n 表示的是n个选手 
{
	int i,j;
	if(n==2)
	{
		a[k][1]=k;      //参赛选手的编号 
		a[k][2]=k+1;	//对阵选手的编号 
		a[k+1][1]=k+1;
		a[k+1][2]=k;
	}
	else
	{
		gen(k,n/2);		//将n位选手的问题转化为2组n/2位选手的问题 
		gen(k+n/2,n/2);	//求解第二组
		
		//接下来解决的是如何将分开求解的结果合并
		//填充右上角
		 
		for(i=k;i<k+n/2;i++)
		{
			for(j=n/2+1;j<=n;j++)
			{
				a[i][j]=a[i+n/2][j-n/2];				
			}
		} 
		
		//填充右下角 
		for(i=k+n/2;i<k+n;i++)
		{
			for(j=n/2+1;j<=n;j++)
			{
				a[i][j]=a[i-n/2][j-n/2];
			}
		 } 
	}
}

int main()
{
	int m,i,j;
	printf("输入参赛人数:");
	scanf("%d",&m);
	gen(1,m);
	printf("\n编号");
	for(i=2;i<=m;i++)
	{
		printf("%2d天",i-1);
	}
	printf("\n");
	for(i=1;i<=m;i++)
	{
		for(j=1;j<=m;j++)
		{
			printf("%4d",a[i][j]);
		}
		printf("\n");
	} 
	
	
	
	
} 
